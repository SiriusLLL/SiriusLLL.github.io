<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[论文阅读]HRNet</title>
      <link href="/2022/10/01/hrnet/"/>
      <url>/2022/10/01/hrnet/</url>
      
        <content type="html"><![CDATA[<h2 id="HRNet"><a href="#HRNet" class="headerlink" title="HRNet"></a>HRNet</h2><p>论文地址：<a href="https://arxiv.org/abs/1908.07919">https://arxiv.org/abs/1908.07919</a></p><p>Github项目地址：<a href="https://github.com/HRNet">https://github.com/HRNet</a></p><p>Human Pose Estimation官方代码：<a href="https://github.com/leoxiaobin/deep-high-resolution-net.pytorch">https://github.com/leoxiaobin/deep-high-resolution-net.pytorch</a></p><h2 id="网络结构"><a href="#网络结构" class="headerlink" title="网络结构"></a>网络结构</h2><p><a href="https://blog.csdn.net/fovever_/article/details/108227898">结构图出处</a></p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20200825200203154.jpg"></p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003143114.png"></p><h2 id="与其他网络对比"><a href="#与其他网络对比" class="headerlink" title="与其他网络对比"></a>与其他网络对比</h2><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003143143.png"></p><h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><h3 id="COCO-2017"><a href="#COCO-2017" class="headerlink" title="COCO 2017"></a>COCO 2017</h3><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003193702.png"></p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003193835.png"></p><h3 id="MPII"><a href="#MPII" class="headerlink" title="MPII"></a>MPII</h3><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003193935.png"></p><h3 id="参数量"><a href="#参数量" class="headerlink" title="参数量"></a>参数量</h3><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003194019.png"></p><h3 id="姿势跟踪结果对比"><a href="#姿势跟踪结果对比" class="headerlink" title="姿势跟踪结果对比"></a>姿势跟踪结果对比</h3><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003194053.png"></p><h3 id="消融实验"><a href="#消融实验" class="headerlink" title="消融实验"></a>消融实验</h3><h4 id="在不同时期交换高低分辨率表征"><a href="#在不同时期交换高低分辨率表征" class="headerlink" title="在不同时期交换高低分辨率表征"></a>在不同时期交换高低分辨率表征</h4><p>最后阶段交换表征、阶段间交换表征和阶段内交换表征。</p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003194153.png"></p><h4 id="高中低分辨率表征对比"><a href="#高中低分辨率表征对比" class="headerlink" title="高中低分辨率表征对比"></a>高中低分辨率表征对比</h4><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003194522.png"></p><h4 id="不同输入尺寸的对比（与SimpleBaseline）"><a href="#不同输入尺寸的对比（与SimpleBaseline）" class="headerlink" title="不同输入尺寸的对比（与SimpleBaseline）"></a>不同输入尺寸的对比（与SimpleBaseline）</h4><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003194639.png"></p><h4 id="在MPII验证集上的表现"><a href="#在MPII验证集上的表现" class="headerlink" title="在MPII验证集上的表现"></a>在MPII验证集上的表现</h4><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003195040.png"></p><h4 id="多人姿态估计（PoseTrack2017数据集）"><a href="#多人姿态估计（PoseTrack2017数据集）" class="headerlink" title="多人姿态估计（PoseTrack2017数据集）"></a>多人姿态估计（PoseTrack2017数据集）</h4><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003194754.png"></p><h4 id="多人姿态跟踪"><a href="#多人姿态跟踪" class="headerlink" title="多人姿态跟踪"></a>多人姿态跟踪</h4><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20221003194928.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo]Hexo博客问题</title>
      <link href="/2022/09/22/hexo%E9%97%AE%E9%A2%98/"/>
      <url>/2022/09/22/hexo%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述：标题中无法使用方括号-和冒号："><a href="#问题描述：标题中无法使用方括号-和冒号：" class="headerlink" title="问题描述：标题中无法使用方括号[]和冒号："></a>问题描述：标题中无法使用方括号[]和冒号：</h2><h2 id="问题分析：Yaml语法中，冒号后面不能跟随特殊符号"><a href="#问题分析：Yaml语法中，冒号后面不能跟随特殊符号" class="headerlink" title="问题分析：Yaml语法中，冒号后面不能跟随特殊符号"></a>问题分析：Yaml语法中，冒号后面不能跟随特殊符号</h2><ul><li><p>问题复现</p><p>使用标题<code>[Hexo]Hexo博客问题</code>或者<code>Hexo:Hexo博客问题</code>，在<code>Git Bash</code>上传文章时会报错</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220922093527.png" style="zoom:67%;" /></li><li><p>问题解决</p><p>把标题放在双引号<code>&quot;&quot;</code>中</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220922094852.png" style="zoom:67%;" /></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Vue3+TS]前端项目问题记录</title>
      <link href="/2022/09/20/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AEdebug/"/>
      <url>/2022/09/20/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AEdebug/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述：前端发起post请求，后端接收到null"><a href="#问题描述：前端发起post请求，后端接收到null" class="headerlink" title="问题描述：前端发起post请求，后端接收到null"></a>问题描述：前端发起post请求，后端接收到null</h2><h2 id="问题分析：后端request方法不对"><a href="#问题分析：后端request方法不对" class="headerlink" title="问题分析：后端request方法不对"></a>问题分析：后端request方法不对</h2><ol><li><p>前端代码</p><ul><li>登录请求方法</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录接口</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">login</span>(<span class="params">data:LoginFormInt</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">service</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>:<span class="string">&#x27;/weblogin&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        data</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建axios实例</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="comment">//创建axios实例</span></span><br><span class="line"><span class="keyword">const</span> service=axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>:<span class="string">&quot;/api&quot;</span>,</span><br><span class="line">    <span class="attr">timeout</span>:<span class="number">5000</span>,</span><br><span class="line">    <span class="attr">headers</span>:&#123;</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json;charset=utf-8&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 请求拦截</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">config</span>)=&gt;</span>&#123;</span><br><span class="line">    config.<span class="property">headers</span>=config.<span class="property">headers</span> || &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>))&#123;</span><br><span class="line">        config.<span class="property">headers</span>.<span class="property">token</span>=<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>) || <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 响应拦截</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">success</span>:<span class="built_in">boolean</span>=res.<span class="property">data</span>.<span class="property">success</span></span><br><span class="line">    <span class="keyword">if</span>(success!=<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="property">data</span></span><br><span class="line">&#125;,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);   </span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><ul><li>登录接口和类</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">LoginFormInt</span>&#123;</span><br><span class="line">    <span class="attr">username</span>:<span class="built_in">string</span></span><br><span class="line">    <span class="attr">userpwd</span>:<span class="built_in">string</span></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LoginData</span>&#123;</span><br><span class="line">    <span class="attr">ruleForm</span>:<span class="title class_">LoginFormInt</span>=&#123;</span><br><span class="line">        <span class="attr">username</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">userpwd</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;   </span><br></pre></td></tr></table></figure></li><li><p>Flask后端代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@main.route(<span class="params"><span class="string">&#x27;/main/weblogin&#x27;</span>,methods=[<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">weblogin</span>():</span><br><span class="line">    <span class="comment">#使用request.get_json()方法获取前端数据</span></span><br><span class="line">    json=request.get_json()</span><br><span class="line">    username=json[<span class="string">&quot;username&quot;</span>]</span><br><span class="line">    userpwd=json[<span class="string">&#x27;userpwd&#x27;</span>]</span><br><span class="line">    <span class="comment">#判断用户名和密码是否与数据库中的相匹配</span></span><br><span class="line">    result = user.query.<span class="built_in">filter</span>(user.Aacc == username, user.Apw == userpwd).<span class="built_in">all</span>()</span><br><span class="line">    <span class="comment">#返回的数据格式</span></span><br><span class="line">    out = &#123;<span class="string">&#x27;success&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">           <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">               <span class="string">&quot;token&quot;</span>: <span class="string">&quot;admin_token&quot;</span></span><br><span class="line">           &#125;&#125;</span><br><span class="line">    <span class="comment">#判断前端请求的数据是否合法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">len</span>(result)):</span><br><span class="line">        <span class="keyword">return</span> makeres(out)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        out[<span class="string">&#x27;success&#x27;</span>] = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> makeres(out)</span><br></pre></td></tr></table></figure></li><li><p>总结</p><p>在接收数据的方法上，起初使用request.values.get，打印结果为null，因为axios发起的数据请求是json格式的PayLoad，应该使用request.get_json()，返回的是一个字典对象。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Ubuntu]使用tree命令生成文件层级树状图</title>
      <link href="/2022/09/20/tree/"/>
      <url>/2022/09/20/tree/</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install tree</span><br></pre></td></tr></table></figure><h2 id="tree命令介绍"><a href="#tree命令介绍" class="headerlink" title="tree命令介绍"></a>tree命令介绍</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220920163022.png"></p><ul><li>-a 显示所有文件和目录。</li><li>-A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。</li><li>-C 在文件和目录清单加上色彩，便于区分各种类型。</li><li>-d 显示目录名称而非内容。</li><li>-D 列出文件或目录的更改时间。</li><li>-f 在每个文件或目录之前，显示完整的相对路径名称。</li><li>-F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”&#x2F;“,”&#x3D;”,”@”,”|”号。</li><li>-g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。</li><li>-i 不以阶梯状列出文件或目录名称。</li><li>-L level 限制目录显示层级。</li><li>-l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。</li><li>-n 不在文件和目录清单加上色彩。</li><li>-N 直接列出文件和目录名称，包括控制字符。</li><li>-p 列出权限标示。</li><li>-P&lt;范本样式&gt; 只显示符合范本样式的文件或目录名称。</li><li>-q 用”?”号取代控制字符，列出文件和目录名称。</li><li>-s 列出文件或目录大小。</li><li>-t 用文件和目录的更改时间排序。</li><li>-u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。</li><li>-x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree -d <span class="comment">#显示目录名称</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220920163409.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[工具]Zotero使用指南</title>
      <link href="/2022/09/13/zotero%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2022/09/13/zotero%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="Zotero简介"><a href="#Zotero简介" class="headerlink" title="Zotero简介"></a>Zotero简介</h2><p>​Zotero是一款免费、开源的文献管理工具。支持多设备同步，内置PDF阅读器，有丰富的插件和强大的文献导入系统。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://www.zotero.org/download/">Zotero官网下载链接</a></p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/微信截图_20220913222148.png" style="zoom: 80%;" /><p>​先后安装Zotero和浏览器插件。</p><p>​安装好之后，在官网页面注册一个账号，打开软件在 <code>编辑-首选项-同步</code>中登录关联一下账户，建议取消自动同步功能，否则记笔记时有概率会被自动同步打断，导致字都白打，有多设备同步需求的话手动同步一下即可。不过同步有容量限制，免费300M，多了要加钱。</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914122842.png" style="zoom:67%;" /><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914124034.png"></p><p>​手动同步在这里。</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914132043.png" style="zoom:67%;" /><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><h3 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>​安装完成后浏览器扩展程序列表中会显示此图标，没显示的话就点右边的拼图标志把它固定一下。</p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220913222825.png"></p><p>​在支持Zotero插件的页面（例如某篇论文的页面），插件图标会变成下图中的样子，点击它会就弹出提示框，选择保存这篇论文的分类文件夹，我这里选择保存到CV文件夹</p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220913223651.png"></p><p>​保存后，论文就出现在Zotero对应的文件夹中了，并且右侧也同步出了论文的基本信息。</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914122236.png" style="zoom: 67%;" /><h3 id="笔记功能"><a href="#笔记功能" class="headerlink" title="笔记功能"></a>笔记功能</h3><p>​选择笔记标签，点击添加后可进行编辑，或者直接在原有的笔记上编辑。支持添加多篇笔记。</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914124302.png" style="zoom:67%;" /><p>​笔记中也支持添加图片，无论是本地的图片还是用微信截图后自动保存在剪切板中的图片，都可以 <code>crtl+v</code> 粘贴进去</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914125034.png"  /><p>​Zotero支持各种各样的插件，感兴趣的朋友可以自行探索，这里推荐一个Markdown的插件<a href="https://addons.thunderbird.net/zh-CN/thunderbird/addon/markdown-here-xul/">点击下载Markdown插件</a>，下载好之后，打开Zotero软件，在工具栏中选择 <code>工具-插件</code>，选择从文件安装，找到下载好的安装包安装即可。</p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914130051.png"></p><p>​用Markdown语法写好的笔记可以用它来转换。</p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914130348.png"></p><h3 id="标签功能"><a href="#标签功能" class="headerlink" title="标签功能"></a>标签功能</h3><p>​为文章添加标签，并且可以指派颜色，让它更醒目。点击标签可以显示拥有相同标签的文章。</p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914131707.png"></p><h3 id="word插件（参考文献的导入）"><a href="#word插件（参考文献的导入）" class="headerlink" title="word插件（参考文献的导入）"></a>word插件（参考文献的导入）</h3><p>​Zotero安装时会自动安装Microsoft Word插件，如果没有的话就在 <code>编辑-首选项-引用-文字处理软件</code>中安装一下。</p><p>​把光标放在想要添加参考文献的地方，点击<code>Add/Edit Citation</code>，并且选择引文的样式。</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914132755.png" style="zoom:67%;" /><p>如果没有找到自己想要的引文样式，可以在<code>编辑-首选项-引用</code>中点击<code>获取更多样式...</code>，搜索自己想要的样式。</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914132940.png" style="zoom:67%;" /><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914134326.png" style="zoom:67%;"/><p>​选择好引用样式后可以在这个红色框框里搜索<code>我的文库</code>中的文献，也可以点击红色的Z来浏览并选择。</p><p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914133037.png"></p><p>​添加好参考文献角标之后，再把光标移到<code>参考文献</code>下，点击<code>Add/Edit Bibliography </code>即可添加引用信息。</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914133340.png" style="zoom:67%;" /><p>​同时，如果由于文章的编辑而使引文顺序发生变化，点击<code>Refresh</code>可以刷新引文顺序，角标和参考文献下的内容都会同步改变。</p><img src="https://cdn.staticaly.com/gh/SiriusLLL/blogcdn@main/img/20220914133645.png" style="zoom:67%;" /><h3 id="文献导入"><a href="#文献导入" class="headerlink" title="文献导入"></a>文献导入</h3><p>​除了使用浏览器插件之外，Zotero也支持本地文件导入，只需要拖动本地文件到Zotero中，Zotero也会识别文章的内容。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
