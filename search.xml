<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端项目问题记录</title>
      <link href="/2022/09/20/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AEdebug/"/>
      <url>/2022/09/20/%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AEdebug/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述：前端发起post请求，后端接收到null"><a href="#问题描述：前端发起post请求，后端接收到null" class="headerlink" title="问题描述：前端发起post请求，后端接收到null"></a>问题描述：前端发起post请求，后端接收到null</h2><h2 id="问题分析：后端request方法不对"><a href="#问题分析：后端request方法不对" class="headerlink" title="问题分析：后端request方法不对"></a>问题分析：后端request方法不对</h2><ol><li><p>前端代码</p><ul><li>登录请求方法</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录接口</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">login</span>(<span class="params">data:LoginFormInt</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">service</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>:<span class="string">&#x27;/weblogin&#x27;</span>,</span><br><span class="line">        <span class="attr">method</span>:<span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">        data</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建axios实例</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="comment">//创建axios实例</span></span><br><span class="line"><span class="keyword">const</span> service=axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>:<span class="string">&quot;/api&quot;</span>,</span><br><span class="line">    <span class="attr">timeout</span>:<span class="number">5000</span>,</span><br><span class="line">    <span class="attr">headers</span>:&#123;</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json;charset=utf-8&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 请求拦截</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">config</span>)=&gt;</span>&#123;</span><br><span class="line">    config.<span class="property">headers</span>=config.<span class="property">headers</span> || &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>))&#123;</span><br><span class="line">        config.<span class="property">headers</span>.<span class="property">token</span>=<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>) || <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 响应拦截</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">success</span>:<span class="built_in">boolean</span>=res.<span class="property">data</span>.<span class="property">success</span></span><br><span class="line">    <span class="keyword">if</span>(success!=<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="property">data</span></span><br><span class="line">&#125;,<span class="function">(<span class="params">err</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);   </span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><ul><li>登录接口和类</li></ul><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">LoginFormInt</span>&#123;</span><br><span class="line">       <span class="attr">username</span>:<span class="built_in">string</span></span><br><span class="line">       <span class="attr">userpwd</span>:<span class="built_in">string</span></span><br><span class="line">   </span><br><span class="line">     &#125;</span><br><span class="line">   <span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">LoginData</span>&#123;</span><br><span class="line">       <span class="attr">ruleForm</span>:<span class="title class_">LoginFormInt</span>=&#123;</span><br><span class="line">           <span class="attr">username</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">           <span class="attr">userpwd</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;   </span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> <span class="title class_">Flask</span>后端代码</span><br><span class="line"></span><br><span class="line">   <span class="string">``</span><span class="string">`python</span></span><br><span class="line"><span class="string">   @main.route(&#x27;/main/weblogin&#x27;,methods=[&#x27;GET&#x27;,&#x27;POST&#x27;])</span></span><br><span class="line"><span class="string">   def weblogin():</span></span><br><span class="line"><span class="string">       #使用request.get_json()方法获取前端数据</span></span><br><span class="line"><span class="string">       json=request.get_json()</span></span><br><span class="line"><span class="string">       username=json[&quot;username&quot;]</span></span><br><span class="line"><span class="string">       userpwd=json[&#x27;userpwd&#x27;]</span></span><br><span class="line"><span class="string">       #判断用户名和密码是否与数据库中的相匹配</span></span><br><span class="line"><span class="string">       result = user.query.filter(user.Aacc == username, user.Apw == userpwd).all()</span></span><br><span class="line"><span class="string">       #返回的数据格式</span></span><br><span class="line"><span class="string">       out = &#123;&#x27;success&#x27;: True,</span></span><br><span class="line"><span class="string">              &quot;data&quot;: &#123;</span></span><br><span class="line"><span class="string">                  &quot;token&quot;: &quot;admin_token&quot;</span></span><br><span class="line"><span class="string">              &#125;&#125;</span></span><br><span class="line"><span class="string">       #判断前端请求的数据是否合法</span></span><br><span class="line"><span class="string">       if (len(result)):</span></span><br><span class="line"><span class="string">           return makeres(out)</span></span><br><span class="line"><span class="string">       else:</span></span><br><span class="line"><span class="string">           out[&#x27;success&#x27;] = False</span></span><br><span class="line"><span class="string">           return makeres(out)</span></span><br></pre></td></tr></table></figure></li><li><p>总结</p><p>在接收数据的方法上，起初使用request.values.get，打印结果为null，因为axios发起的数据请求是json格式的PayLoad，应该使用request.get_json()，返回的是一个字典对象。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Vue3 </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
